local boards = require 'boards'
local drawing = require 'boards.drawing'
local extents = require 'boards.extents'
local manipulation = require 'boards.manipulation'
local panelization = require 'boards.panelization'

local mm = 1e9

local simple = boards.load('./simple')
local simple180 = manipulation.rotate_board(simple, 180)

local simple_extents = extents.compute_board_extents(simple)
local width = simple_extents.width
local height = simple_extents.height + 24*mm
local tabh = panelization.empty_board(width, 10*mm)
local tabv = panelization.empty_board(10*mm, height)

local layout = {
	tabv,
	{ tabh, simple, tabh, },
	tabv
}

local panel = panelization.panelize(layout, {}, false)

local fiducial_dot = drawing.circle_aperture(1*mm)
local fiducial_ring = drawing.circle_aperture(3*mm)

local function draw_fiducial(x, y)
	drawing.draw_path(panel.images.top_copper, fiducial_dot, x, y)
	drawing.draw_path(panel.images.bottom_copper, fiducial_dot, x, y)
	drawing.draw_path(panel.images.top_soldermask, fiducial_ring, x, y)
	drawing.draw_path(panel.images.bottom_soldermask, fiducial_ring, x, y)
end

local panel_extents = extents.compute_board_extents(panel)
local width = panel_extents.width
local height = panel_extents.height
draw_fiducial(5*mm, height - 5*mm)
draw_fiducial(width - 5*mm, 5*mm)
draw_fiducial(width - 5*mm, height - 5*mm)

boards.merge_apertures(panel)
boards.save(panel, './drawing-fiducials')

-- vi: ft=lua
